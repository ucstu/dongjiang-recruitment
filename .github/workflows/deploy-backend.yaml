name: Deploy Backend

on:
  workflow_call:
    inputs:
      working-directory:
        description: "Working directory"
        required: true
        type: string
      product-prefix:
        description: "Product prefix"
        required: true
        type: string
      package-list:
        description: "Package list"
        required: true
        type: string
      environment:
        description: "Environment"
        required: true
        type: string
      previous-ref:
        description: "Previous ref"
        required: true
        type: string
      current-ref:
        description: "Latest ref"
        required: true
        type: string
      temp-tag:
        description: "Temporary tag"
        required: true
        type: string
    outputs:
      package-list:
        description: "Package list"
        value: ${{ inputs.package-list }}
      environment:
        description: "Environment"
        value: ${{ inputs.environment }}
      previous-ref:
        description: "Previous ref"
        value: ${{ inputs.previous-ref }}
      current-ref:
        description: "Latest ref"
        value: ${{ inputs.current-ref }}

env:
  WORKING_DIRECTORY: ${{ inputs.working-directory }}
  PRODUCT_PREFIX: ${{ inputs.product-prefix }}

jobs:
  deploy-projects:
    name: Deploy
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    strategy:
      fail-fast: false
      matrix:
        package-name: ${{ fromJson(inputs.package-list) }}
    steps:
      - uses: actions/checkout@v3
      - uses: yokawasa/action-setup-kube-tools@v0.9.2
        with:
          setup-tools: |
            kubectl
      - name: Set up kubeConfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config
      - name: Get Tag Name
        id: tag-name
        run: echo tag-name=$(echo ${{ inputs.current-ref }} | sed -e "s/refs\/tags\///g") >> $GITHUB_OUTPUT
      - name: Deploy service
        env:
          APP_NAME: ${{ format('{0}-{1}', env.PRODUCT_PREFIX, matrix.package-name) }}
          APP_VERSION: ${{ inputs.environment == 'production' && steps.tag-name.outputs.tag-name || inputs.temp-tag }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: envsubst < deploy.yaml | kubectl apply -f -
