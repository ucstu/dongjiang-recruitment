name: Publish Artifacts

on:
  workflow_call:
    inputs:
      packages-pattern:
        description: "Packages pattern"
        required: true
        type: string
        default: ""
      packages-prefix:
        description: "Packages prefix"
        required: true
        type: string
      environment:
        description: "Environment"
        required: true
        type: string
      previous-ref:
        description: "Previous ref"
        required: true
        type: string
      current-ref:
        description: "Latest ref"
        required: true
        type: string
      temp-tag:
        description: "Temporary tag"
        required: true
        type: string
    outputs:
      environment:
        description: "Environment"
        value: ${{ inputs.environment }}
      previous-ref:
        description: "Previous ref"
        value: ${{ inputs.previous-ref }}
      current-ref:
        description: "Latest ref"
        value: ${{ inputs.current-ref }}

jobs:
  create-release:
    name: Release
    if: ${{ inputs.environment == 'production' }}
    runs-on: ubuntu-latest
    steps:
      - name: Get previous and current tag
        id: tag
        run: |
          echo 'previous-ref=$(echo ${{ inputs.previous-ref }} | sed "s/refs\/tags\///")' >> $GITHUB_OUTPUT
          echo 'current-ref=$(echo ${{ inputs.current-ref }} | sed "s/refs\/tags\///")' >> $GITHUB_OUTPUT
      - name: Generate Changelog
        id: changelog
        uses: scottbrenner/generate-changelog-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          from-tag: ${{ steps.tag.outputs.previous-ref }}
          to-tag: ${{ steps.tag.outputs.current-ref }}
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: ${{ github.workspace }}/artifacts
      - name: Create artifacts directory
        run: mkdir -p ${{ github.workspace }}/artifacts
      - name: Zip Artifacts
        working-directory: ${{ github.workspace }}/artifacts
        run: |
          for file in *; do
            if [ -d $file ]; then
              zip -r $file.zip $file
            fi
          done
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{steps.changelog.outputs.changelog}}
          files: ${{ github.workspace }}/artifacts/*.zip
          prerelease: false

  create-packages:
    name: Package
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: ${{ github.workspace }}/artifacts
      - name: Create artifacts directory
        run: mkdir -p ${{ github.workspace }}/artifacts
      - name: Login ghcr
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Packages
        working-directory: ${{ github.workspace }}/artifacts
        run: |
          for file in *; do
            if [ -d $file ] && [[ $file =~ ${{ inputs.packages-pattern }} ]]; then
              docker load --input $file/$file.tar
            fi
          done
          # 遍历所有以 ${{ inputs.packages-prefix }} 开头的镜像，打上 tag 并推送到 ghcr.io
          for image in $(docker images --format '{{.Repository}}:{{.Tag}}' | grep ^${{ inputs.packages-prefix }}); do
            docker tag $image ghcr.io/${{ github.repository }}/$image
            docker push ghcr.io/${{ github.repository }}/$image
          done
