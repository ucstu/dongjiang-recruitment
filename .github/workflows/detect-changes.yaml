name: Detect Changes

on:
  workflow_call:
    inputs:
      backend-filters:
        description: "Backend filters"
        required: true
        type: string
      frontend-filters:
        description: "Frontend filters"
        required: true
        type: string
      pull-request-ref:
        description: "Pull request ref"
        required: true
        type: string
      push-ref:
        description: "Push ref"
        required: true
        type: string
      push-sha:
        description: "Push SHA"
        required: true
        type: string
    outputs:
      backend-packages:
        description: "Backend packages"
        value: ${{ jobs.detect-backend.outputs.backend-packages }}
      frontend-packages:
        description: "Frontend packages"
        value: ${{ jobs.detect-frontend.outputs.frontend-packages }}
      backend-changed:
        description: "Backend changed packages"
        value: ${{ jobs.detect-backend.outputs.backend-changed }}
      frontend-changed:
        description: "Frontend changed packages"
        value: ${{ jobs.detect-frontend.outputs.frontend-changed }}
      current-tag:
        description: "Current tag"
        value: ${{ jobs.detect-basic.outputs.current-tag }}
      current-branch:
        description: "Current branch"
        value: ${{ jobs.detect-basic.outputs.current-branch }}
      current-tag-on-master:
        description: "Current tag on master"
        value: ${{ jobs.detect-basic.outputs.current-tag-on-master }}
      environment:
        description: "Environment"
        value: ${{ jobs.detect-basic.outputs.environment }}
      previous-ref:
        description: "Previous ref"
        value: ${{ jobs.detect-basic.outputs.previous-ref }}
      current-ref:
        description: "Latest ref"
        value: ${{ jobs.detect-basic.outputs.current-ref }}

jobs:
  detect-basic:
    name: Basic
    runs-on: ubuntu-latest
    outputs:
      current-tag: ${{ steps.environment.outputs.current-tag }}
      current-branch: ${{ steps.environment.outputs.current-branch }}
      current-tag-on-master: ${{ steps.environment.outputs.tag-on-master }}
      environment: ${{ steps.environment.outputs.environment }}
      previous-ref: ${{ steps.previous.outputs.previous-ref }}
      current-ref: ${{ steps.previous.outputs.current-ref }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Detect environment
        id: environment
        run: |
          CURRENT_TAG=$(echo ${{ inputs.push-ref }} | grep -E 'refs\/tags\/v[0-9]+\.[0-9]+\.[0-9]+$' | sed -e 's/refs\/tags\///g')
          CURRENT_BRANCH=$(echo ${{ inputs.push-ref }} | grep -E 'refs\/heads\/[a-z]+$' | sed -e 's/refs\/heads\///g')
          CURRENT_TAG_ON_MASTER=$([ $CURRENT_TAG != '' ] && ([ -n $(git branch -a --contains tags/$CURRENT_TAG | grep -E 'remotes\/origin\/master$' | sed -e 's/remotes\/origin\///g') ] && echo true || echo false) || echo false)
          if [ $CURRENT_TAG_ON_MASTER != 'true' ]; then
            CURRENT_BRANCH=master
          fi
          echo "current-tag=$CURRENT_TAG" >> $GITHUB_OUTPUT
          echo "current-branch=$CURRENT_BRANCH" >> $GITHUB_OUTPUT
          echo "tag-on-master=$CURRENT_TAG_ON_MASTER" >> $GITHUB_OUTPUT
          echo "environment=$([ '${{ inputs.pull-request-ref }}' == '' ] && \
          echo $([ $CURRENT_TAG_ON_MASTER == 'true' ] && echo production || echo $CURRENT_BRANCH) || \
          echo release)" >> $GITHUB_OUTPUT
      - name: Get old previous and current tag
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.environment.outputs.environment }}-previous-ref
          key: ${{ steps.environment.outputs.environment }}-previous-ref
      - name: Get previous and current tag
        id: previous
        run: |
          HAS_TAG=$(git tag -l)
          LATEST_TAG=$([ $HAS_TAG != '' ] && git describe --tags --abbrev=0 || echo '')
          PREVIOUS_TAG=$([ $HAS_TAG != '' ] && git describe --tags --abbrev=0 $(git rev-list --tags --skip=1 --max-count=1) || echo '')
          if [ ${{ steps.environment.outputs.environment }} == 'production' ]; then
            echo "previous-ref=$( [ $LATEST_TAG != $PREVIOUS_TAG ] && echo refs/tags/$PREVIOUS_TAG || echo '' )" >> $GITHUB_OUTPUT
            echo "current-ref=refs/tags/$LATEST_TAG" >> $GITHUB_OUTPUT
          elif [ ${{ steps.environment.outputs.environment }} == 'release' ]; then
            echo "previous-ref=$LATEST_TAG" >> $GITHUB_OUTPUT
            echo "current-ref=${{ inputs.pull-request-ref }}" >> $GITHUB_OUTPUT
          else
            if [ -f ${{ steps.environment.outputs.environment }}-previous-ref ]; then
              echo "previous-ref=$(cat ${{ steps.environment.outputs.environment }}-previous-ref)" >> $GITHUB_OUTPUT
            else
              echo "previous-ref=" >> $GITHUB_OUTPUT
            fi
            echo "current-ref=${{ inputs.push-sha }}" >> $GITHUB_OUTPUT
            echo ${{ inputs.push-sha }} > ${{ steps.environment.outputs.environment }}-previous-ref
          fi

  detect-backend:
    name: Backend
    runs-on: ubuntu-latest
    needs: detect-basic
    outputs:
      backend-packages: ${{ steps.backend-packages.outputs.packages }}
      backend-changed: ${{ steps.backend-changed.outputs.changed }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Detect backend packages
        id: backend-packages
        run: |
          echo "packages=$(echo [$(echo '${{ inputs.backend-filters }}' | sed 's/\(.*\):/\"\1\",/g' | sed 's/.* - .*//g' | sed '/^$/d')] | sed 's/,]/]/g')" >> $GITHUB_OUTPUT
      - name: Detect backend changes
        uses: dorny/paths-filter@v2
        id: backend-changes
        with:
          ref: ${{ needs.detect-basic.outputs.current-ref }}
          base: ${{ needs.detect-basic.outputs.previous-ref }}
          filters: ${{ inputs.backend-filters }}
      - name: Get backend changed packages
        id: backend-changed
        run: |
          echo "changed=$([ '${{ needs.detect-basic.outputs.previous-ref }}' == '' ] && \
          echo '${{ steps.backend-packages.outputs.packages }}' || \
          echo '${{ steps.backend-changes.outputs.changes }}')" >> $GITHUB_OUTPUT

  detect-frontend:
    name: Frontend
    runs-on: ubuntu-latest
    needs: detect-basic
    outputs:
      frontend-packages: ${{ steps.frontend-packages.outputs.packages }}
      frontend-changed: ${{ steps.frontend-changed.outputs.changed }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Detect frontend packages
        id: frontend-packages
        run: |
          echo "packages=$(echo [$(echo '${{ inputs.frontend-filters }}' | sed 's/\(.*\):/\"\1\",/g' | sed 's/.* - .*//g' | sed '/^$/d')] | sed 's/,]/]/g')" >> $GITHUB_OUTPUT
      - name: Detect frontend changes
        uses: dorny/paths-filter@v2
        id: frontend-changes
        with:
          ref: ${{ needs.detect-basic.outputs.current-ref }}
          base: ${{ needs.detect-basic.outputs.previous-ref }}
          filters: ${{ inputs.frontend-filters }}
      - name: Get frontend changed packages
        id: frontend-changed
        run: |
          echo "changed=$([ '${{ needs.detect-basic.outputs.previous-ref }}' == '' ] && \
          echo '${{ steps.frontend-packages.outputs.packages }}' || \
          echo '${{ steps.frontend-changes.outputs.changes }}')" >> $GITHUB_OUTPUT
