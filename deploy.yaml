apiVersion: apps/v1
kind: Deployment
metadata:
  name: $APP_NAME
  namespace: dongjiang-recruitment-$APP_ENV
  labels:
    app: $APP_NAME
spec:
  selector:
    matchLabels:
      app: $APP_NAME
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: $APP_NAME
    spec:
      # initContainers:
      # Init containers are exactly like regular containers, except:
      # - Init containers always run to completion.
      # - Each init container must complete successfully before the next one starts.
      containers:
        - name: $APP_NAME
          image: $APP_IMAGE
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 1024m
              memory: 1024Mi
          env:
            - name: NODE_ENV
              value: production
          ports:
            - containerPort: $APP_PORT
              name: http
          volumeMounts:
            - name: dongjiang-recruitment
              mountPath: /etc/dongjiang-recruitment
      volumes:
        - name: dongjiang-recruitment
          secret:
            secretName: dongjiang-recruitment
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: $APP_NAME
  namespace: dongjiang-recruitment-$APP_ENV
  labels:
    app: $APP_NAME
spec:
  selector:
    app: $APP_NAME
  type: ClusterIP
  sessionAffinity: None
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
  ports:
    - name: http
      protocol: TCP
      port: $APP_PORT
      targetPort: $APP_PORT
      # If you set the `spec.type` field to `NodePort` and you want a specific port number,
      # you can specify a value in the `spec.ports[*].nodePort` field.
      # nodePort: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: dongjiang-recruitment-$APP_ENV
  name: $APP_NAME
  annotations:
    external-dns.alpha.kubernetes.io/hostname: $APP_DOMAIN
    external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
spec:
  tls:
    - hosts:
        - $APP_DOMAIN
      secretName: $SECRET_NAME
  rules:
    - host: $APP_DOMAIN
      http:
        paths:
          - path: $APP_PATH
            pathType: Prefix
            backend:
              service:
                name: $APP_NAME
                port:
                  name: http
